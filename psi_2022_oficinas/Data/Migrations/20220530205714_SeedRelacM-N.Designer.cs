// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using psi_2022_oficinas.Data;

#nullable disable

namespace psi_2022_oficinas.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220530205714_SeedRelacM-N")]
    partial class SeedRelacMN
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "C",
                            ConcurrencyStamp = "20b65401-9c1e-440b-94d8-31175dece4fa",
                            Name = "Cliente",
                            NormalizedName = "CLIENTE"
                        },
                        new
                        {
                            Id = "A",
                            ConcurrencyStamp = "19cc1fe5-6ee5-46e5-89e9-8bff01cb65e0",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "G",
                            ConcurrencyStamp = "6e512566-dfe6-45c6-90aa-3e69d0db068c",
                            Name = "Gestor",
                            NormalizedName = "GESTOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OficinasServiços", b =>
                {
                    b.Property<int>("ListaOficinasIdOficina")
                        .HasColumnType("int");

                    b.Property<int>("ListaServicosIdServ")
                        .HasColumnType("int");

                    b.HasKey("ListaOficinasIdOficina", "ListaServicosIdServ");

                    b.HasIndex("ListaServicosIdServ");

                    b.ToTable("OficinasServiços");

                    b.HasData(
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 10
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 1,
                            ListaServicosIdServ = 14
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 2,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 12
                        },
                        new
                        {
                            ListaOficinasIdOficina = 3,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 10
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 13
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 4,
                            ListaServicosIdServ = 14
                        },
                        new
                        {
                            ListaOficinasIdOficina = 5,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 5,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 5,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 5,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 5,
                            ListaServicosIdServ = 14
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 6,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 7,
                            ListaServicosIdServ = 12
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 10
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 13
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 8,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 10
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 9,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 10,
                            ListaServicosIdServ = 13
                        },
                        new
                        {
                            ListaOficinasIdOficina = 11,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 11,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 11,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 11,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 14
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 10
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 12,
                            ListaServicosIdServ = 6
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 1
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 14
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 10
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 7
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 11
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 8
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 9
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 2
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 5
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 13
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 4
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 12
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 3
                        },
                        new
                        {
                            ListaOficinasIdOficina = 13,
                            ListaServicosIdServ = 6
                        });
                });

            modelBuilder.Entity("psi_2022_oficinas.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataRegisto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Clientes", b =>
                {
                    b.Property<int>("IdClientes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientes"), 1L, 1);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Apelido");

                    b.Property<string>("CodPostal")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("DataNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NCartaConducao")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Ntelemovel")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrimeiroNome");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClientes");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Gestores", b =>
                {
                    b.Property<int>("GestorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GestorID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PrimeiroNome");

                    b.HasKey("GestorID");

                    b.ToTable("Gestores");

                    b.HasData(
                        new
                        {
                            GestorID = 1,
                            Email = "gestor1@mail.com",
                            Nome = "Gestor1"
                        },
                        new
                        {
                            GestorID = 2,
                            Email = "gestor2@mail.com",
                            Nome = "Gestor2"
                        },
                        new
                        {
                            GestorID = 3,
                            Email = "gestor3@mail.com",
                            Nome = "Gestor3"
                        },
                        new
                        {
                            GestorID = 4,
                            Email = "gestor4@mail.com",
                            Nome = "Gestor4"
                        },
                        new
                        {
                            GestorID = 5,
                            Email = "gestor5@mail.com",
                            Nome = "Gestor5"
                        },
                        new
                        {
                            GestorID = 6,
                            Email = "gestor6@mail.com",
                            Nome = "Gestor6"
                        },
                        new
                        {
                            GestorID = 7,
                            Email = "gestor7@mail.com",
                            Nome = "Gestor7"
                        },
                        new
                        {
                            GestorID = 8,
                            Email = "gestor8@mail.com",
                            Nome = "Gestor8"
                        },
                        new
                        {
                            GestorID = 9,
                            Email = "gestor9@mail.com",
                            Nome = "Gestor9"
                        },
                        new
                        {
                            GestorID = 10,
                            Email = "gestor10@mail.com",
                            Nome = "Gestor10"
                        },
                        new
                        {
                            GestorID = 11,
                            Email = "gestor11@mail.com",
                            Nome = "Gestor11"
                        },
                        new
                        {
                            GestorID = 12,
                            Email = "gestor12@mail.com",
                            Nome = "Gestor12"
                        },
                        new
                        {
                            GestorID = 13,
                            Email = "gestor13@mail.com",
                            Nome = "Gestor13"
                        });
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Marcacoes", b =>
                {
                    b.Property<int>("IdMarcacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarcacao"), 1L, 1);

                    b.Property<string>("Caucao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassServico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoServico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdOficina")
                        .HasColumnType("int");

                    b.Property<int>("IdPagamento")
                        .HasColumnType("int");

                    b.HasKey("IdMarcacao");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdOficina");

                    b.HasIndex("IdPagamento");

                    b.ToTable("Marcacoes");
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.MetodoPagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPagamento"), 1L, 1);

                    b.Property<string>("TipoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPagamento");

                    b.ToTable("MetodoPagamento");

                    b.HasData(
                        new
                        {
                            IdPagamento = 1,
                            TipoPagamento = "Multibanco"
                        },
                        new
                        {
                            IdPagamento = 2,
                            TipoPagamento = "MBway"
                        },
                        new
                        {
                            IdPagamento = 3,
                            TipoPagamento = "Cartão de Crédito"
                        });
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Oficinas", b =>
                {
                    b.Property<int>("IdOficina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOficina"), 1L, 1);

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdGestor")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NumTelemovel")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("IdOficina");

                    b.HasIndex("IdGestor");

                    b.ToTable("Oficinas");

                    b.HasData(
                        new
                        {
                            IdOficina = 1,
                            CodigoPostal = "1400 - 145",
                            IdGestor = 1,
                            Imagem = "id1_boxcarvulcolisboa.jpg",
                            Localidade = "Lisboa",
                            Morada = "Rua Fernão Mendes Pinto Lote M-T",
                            Nome = "Boxcar Vulco Lisboa",
                            NumTelemovel = "912 360 073"
                        },
                        new
                        {
                            IdOficina = 2,
                            CodigoPostal = "4705 - 084",
                            IdGestor = 2,
                            Imagem = "id2_braga.jpg",
                            Localidade = "Braga",
                            Morada = "Avenida Cidade do Porto n.º 182, Ferreiros",
                            Nome = "Confiauto Braga",
                            NumTelemovel = "252 248 500"
                        },
                        new
                        {
                            IdOficina = 3,
                            CodigoPostal = "4445 - 245",
                            IdGestor = 3,
                            Imagem = "id3_autoarcadgua2.jpg",
                            Localidade = "Valongo, Porto",
                            Morada = "Rua 1º de Maio n.º 614B, Alfena",
                            Nome = "Auto Arca D'Água 2",
                            NumTelemovel = "229 689 811"
                        },
                        new
                        {
                            IdOficina = 4,
                            CodigoPostal = "2900 - 395",
                            IdGestor = 4,
                            Imagem = "id4.jpg",
                            Localidade = "Setúbal",
                            Morada = "Rua Guilherme Gomes Fernandes n.º 1",
                            Nome = "Manuel Jorge Santos Pereira",
                            NumTelemovel = "921321817"
                        },
                        new
                        {
                            IdOficina = 5,
                            CodigoPostal = "2825 - 895",
                            IdGestor = 5,
                            Imagem = "id5_jsa.jpg",
                            Localidade = "Almada, Setúbal",
                            Morada = "Rua 27 de Julho n.º 27, Trafaria",
                            Nome = "JSA",
                            NumTelemovel = "960 306 191"
                        },
                        new
                        {
                            IdOficina = 6,
                            CodigoPostal = "3105-238",
                            IdGestor = 6,
                            Imagem = "id6_meiricarro.jpg",
                            Localidade = "Pombal, Leiria",
                            Morada = "Rua das Covinhas, Santiago de Litém",
                            Nome = "MEIRICARRO",
                            NumTelemovel = "236 948 477"
                        },
                        new
                        {
                            IdOficina = 7,
                            CodigoPostal = "3500-188",
                            IdGestor = 7,
                            Imagem = "id7_automotor.jpg",
                            Localidade = "Viseu",
                            Morada = "Travassós de Baixo, Estrada São João da Carreira",
                            Nome = "Automotorsport",
                            NumTelemovel = "918 702 101"
                        },
                        new
                        {
                            IdOficina = 8,
                            CodigoPostal = "3070-604",
                            IdGestor = 8,
                            Imagem = "id8.jpg",
                            Localidade = "Mira, Coimbra",
                            Morada = "Rua da Floresta n.º 255, Carapelhos",
                            Nome = "Auto Carapelhos",
                            NumTelemovel = "231 451 782"
                        },
                        new
                        {
                            IdOficina = 9,
                            CodigoPostal = "2005-002",
                            IdGestor = 9,
                            Imagem = "id9_martinho.jpg",
                            Localidade = "Santarém",
                            Morada = "Rua Doutor Hilário Barreiro Nunes Lote 26B, Zona Industrial",
                            Nome = "Martinho Auto",
                            NumTelemovel = "243 302 228"
                        },
                        new
                        {
                            IdOficina = 10,
                            CodigoPostal = "2460-477",
                            IdGestor = 10,
                            Imagem = "id10.jpg",
                            Localidade = "Alcobaça, Leiria",
                            Morada = "Zona Industrial Cabeço de Deus",
                            Nome = "Auto Nogueiras",
                            NumTelemovel = "262 585 252"
                        },
                        new
                        {
                            IdOficina = 11,
                            CodigoPostal = "3800-301",
                            IdGestor = 11,
                            Imagem = "id11_corvauto.jpg",
                            Localidade = "Aveiro",
                            Morada = "Rua Duarte Ludgero, Esgueira",
                            Nome = "Corvauto",
                            NumTelemovel = "234 303 150"
                        },
                        new
                        {
                            IdOficina = 12,
                            CodigoPostal = "5300-107",
                            IdGestor = 12,
                            Imagem = "id12.jpg",
                            Localidade = "Bragança",
                            Morada = "Avenida das Cantarias n.º 130",
                            Nome = "Auto Imperial",
                            NumTelemovel = "273 302 600"
                        },
                        new
                        {
                            IdOficina = 13,
                            CodigoPostal = "8100-289",
                            IdGestor = 13,
                            Imagem = "id13_rinoauto.jpg",
                            Localidade = "Loulé, Faro",
                            Morada = "Cerro Cabeça de Câmara",
                            Nome = "Rino - Auto Alexandre",
                            NumTelemovel = "289 410 660"
                        });
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Serviços", b =>
                {
                    b.Property<int>("IdServ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServ"), 1L, 1);

                    b.Property<string>("Servico")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdServ");

                    b.ToTable("Serviços");

                    b.HasData(
                        new
                        {
                            IdServ = 1,
                            Servico = "Ar Condicionado"
                        },
                        new
                        {
                            IdServ = 2,
                            Servico = "Estofos"
                        },
                        new
                        {
                            IdServ = 3,
                            Servico = "Vidros"
                        },
                        new
                        {
                            IdServ = 4,
                            Servico = "Mecânica"
                        },
                        new
                        {
                            IdServ = 5,
                            Servico = "Pneus"
                        },
                        new
                        {
                            IdServ = 6,
                            Servico = "Inspeção Periódica"
                        },
                        new
                        {
                            IdServ = 7,
                            Servico = "Bate-chapas"
                        },
                        new
                        {
                            IdServ = 8,
                            Servico = "Cortesia/Mobilidade"
                        },
                        new
                        {
                            IdServ = 9,
                            Servico = "Eletricidade/Eletrónica"
                        },
                        new
                        {
                            IdServ = 10,
                            Servico = "Lavagem"
                        },
                        new
                        {
                            IdServ = 11,
                            Servico = "Pintura"
                        },
                        new
                        {
                            IdServ = 12,
                            Servico = "Tuning"
                        },
                        new
                        {
                            IdServ = 13,
                            Servico = "Assistência em Viagem"
                        },
                        new
                        {
                            IdServ = 14,
                            Servico = "GPL Auto"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("psi_2022_oficinas.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("psi_2022_oficinas.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("psi_2022_oficinas.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("psi_2022_oficinas.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OficinasServiços", b =>
                {
                    b.HasOne("psi_2022_oficinas.Models.Oficinas", null)
                        .WithMany()
                        .HasForeignKey("ListaOficinasIdOficina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("psi_2022_oficinas.Models.Serviços", null)
                        .WithMany()
                        .HasForeignKey("ListaServicosIdServ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Marcacoes", b =>
                {
                    b.HasOne("psi_2022_oficinas.Models.Clientes", "Cliente")
                        .WithMany("ListaMarc")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("psi_2022_oficinas.Models.Oficinas", "Oficina")
                        .WithMany("ListaMarcacoes")
                        .HasForeignKey("IdOficina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("psi_2022_oficinas.Models.MetodoPagamento", "Pagamento")
                        .WithMany()
                        .HasForeignKey("IdPagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Oficina");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Oficinas", b =>
                {
                    b.HasOne("psi_2022_oficinas.Models.Gestores", "Gestor")
                        .WithMany()
                        .HasForeignKey("IdGestor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Clientes", b =>
                {
                    b.Navigation("ListaMarc");
                });

            modelBuilder.Entity("psi_2022_oficinas.Models.Oficinas", b =>
                {
                    b.Navigation("ListaMarcacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
